{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Favorites/style.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/Favorites.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","event","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","hoveredUserId","setHoveredUserId","favoritUsers","setFavoritUsers","userList","setUsers","selectedCountry","setCountry","setCountryList","localFavoritUsers","favoritUsersFromLocalStorage","setFavoritFromLS","favoritUsersToLocalStorage","handleMouseLeave","filterByCountery","newSelectedCountries","filterUsers","filter","item","length","indexOf","location","country","useEffect","newCoutries","Set","map","user","JSON","parse","localStorage","getItem","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","includes","IconButton","onClick","concat","setItem","stringify","addToFavorite","Home","Content","Header","setIsLoading","fetchUsers","a","axios","get","response","data","results","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","push","aria-label","indicatorColor","textColor","Tab","Favorites","FavoritesList","favoritesUsersList","updateFavoritList","setUpdateFavoritList","updateList","removeFromFavorite","favoritesList","setUserformLS","isListLoad","setIsListLoad","tempFavoritesList","getUserformLS","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.da65526a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = (event) => {\r\n    onChange && onChange(value,label,event.target.checked);\r\n  \r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favoritUsers, setFavoritUsers] = useState([]);\r\n  const [userList,setUsers] = useState([]);\r\n  const [selectedCountry,setCountry] = useState([]);\r\n  const [countryList,setCountryList] = useState([]);\r\n  let localFavoritUsers = [...favoritUsers];\r\n  let [favoritUsersFromLocalStorage,setFavoritFromLS] = useState([]);\r\n  let favoritUsersToLocalStorage =[];\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  \r\n  const addToFavorite = (user)=>{\r\n    if(!favoritUsers.includes(user)){\r\n    localFavoritUsers =[...favoritUsers,user];\r\n    }else{\r\n    localFavoritUsers = localFavoritUsers.filter(function(item){\r\n      return (item !== user);\r\n    })\r\n    }\r\n    setFavoritUsers(localFavoritUsers);\r\n    favoritUsersToLocalStorage = favoritUsersFromLocalStorage.concat(localFavoritUsers);\r\n    localStorage.setItem(\"favoritUsers\", JSON.stringify(favoritUsersToLocalStorage));\r\n  };\r\n  \r\n\r\n  const filterByCountery = (value,label,isChecked) => {\r\n    let newSelectedCountries = [...selectedCountry];\r\n    if(isChecked){ \r\n      newSelectedCountries = [...selectedCountry,label];\r\n    }else{\r\n      newSelectedCountries = newSelectedCountries.filter(function(item){\r\n        return (item !== label);\r\n      }) \r\n    }\r\n\r\n    const filterUsers = (newSelectedCountries.length === 0) ? users : users.filter(function(item){\r\n      return (newSelectedCountries.indexOf(item.location.country) !== -1 );\r\n    })\r\n    setCountry(newSelectedCountries);\r\n    setUsers(filterUsers) \r\n  };\r\n \r\n  useEffect(()=>{ \r\n    setUsers(users);\r\n    let newCoutries = [...new Set(users.map((user)=>user.location.country))];\r\n    setCountryList(newCoutries);\r\n    if(JSON.parse(localStorage.getItem(\"favoritUsers\"))=== null){\r\n      setFavoritFromLS([]);\r\n    }else{\r\n    setFavoritFromLS(JSON.parse(localStorage.getItem(\"favoritUsers\")));\r\n    }\r\n  },[users])\r\n \r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={filterByCountery} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={filterByCountery} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={filterByCountery} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={filterByCountery}/>\r\n      </S.Filters>\r\n      <S.List>\r\n        {userList.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favoritUsers.includes(user) }>\r\n                <IconButton  onClick={()=>addToFavorite(user)}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n    if(newValue === 1){\r\n      history.push(\"/Favorites\")\r\n    }else{\r\n      history.push(\"/\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} />\r\n        <Tab label=\"Favorites\" index={1} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst FavoritesList = ({favoritesUsersList})=>{\r\n\r\n    const [updateFavoritList, setUpdateFavoritList] = useState([]);\r\n    \r\n    const removeFromFavorite = (user)=>{\r\n      let updateList = updateFavoritList.filter(function(item){\r\n        return (item !== user);\r\n      })\r\n      setUpdateFavoritList(updateList);\r\n      localStorage.setItem(\"favoritUsers\", JSON.stringify(updateList));\r\n    };\r\n    \r\n  \r\n    \r\n \r\n    useEffect(()=>{ \r\n      setUpdateFavoritList(favoritesUsersList);\r\n    },[favoritesUsersList])\r\n \r\n   \r\n  \r\n    return (\r\n      <S.UserList>\r\n        <S.List>\r\n          {updateFavoritList.map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={true}>\r\n                  <IconButton  onClick={()=>removeFromFavorite(user)}>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n          })}\r\n        </S.List>\r\n      </S.UserList>\r\n    );\r\n};\r\n\r\nexport default FavoritesList;","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport * as S from \"./style\";\r\nimport FavoritesList from \"components/FavoritesList\";\r\n\r\nconst Favorites = () =>{\r\n    const [favoritesList,setUserformLS] = useState([]);\r\n    const [isListLoad,setIsListLoad] = useState(false)\r\n\r\n    \r\n    useEffect(()=>{\r\n        getUserformLS();\r\n    },[isListLoad])\r\n\r\n    function getUserformLS() {\r\n      if(JSON.parse(localStorage.getItem(\"favoritUsers\"))=== null){\r\n        setUserformLS([]);\r\n      }else{\r\n        const tempFavoritesList = JSON.parse(localStorage.getItem(\"favoritUsers\"));\r\n        setUserformLS(tempFavoritesList);\r\n        setIsListLoad(true);\r\n      }\r\n    }\r\n  \r\n\r\n    return(\r\n     <S.Favorites>\r\n       <S.Content>\r\n          <S.Header>\r\n              <Text size=\"54px\" bold>\r\n                YOUR FAVORITES\r\n              </Text>    \r\n          </S.Header>\r\n          <FavoritesList favoritesUsersList={favoritesList} />\r\n        </S.Content>\r\n     </S.Favorites>\r\n    );\r\n};\r\n\r\nexport default Favorites;\r\n\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home} from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport Favorites from \"pages/Favorites\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/Favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}