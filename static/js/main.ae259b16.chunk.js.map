{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Favorites/style.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/Favorites.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","event","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","hoveredUserId","setHoveredUserId","favoritUsers","setFavoritUsers","userList","setUsers","selectedCountry","setCountry","countryList","setCountryList","localFavoritUsers","favoritUsersFromLocalStorage","setFavoritFromLS","favoritUsersToLocalStorage","handleMouseLeave","filterByCountery","newSelectedCountries","filterUsers","filter","item","length","indexOf","location","country","useEffect","countryMap","Map","forEach","element","get","set","newCountries","entries","sort","a","b","slice","console","log","getPopulerCuntries","JSON","parse","localStorage","getItem","map","user","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","includes","IconButton","onClick","concat","setItem","stringify","addToFavorite","Home","Content","Header","setIsLoading","fetchUsers","axios","response","data","results","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","push","aria-label","indicatorColor","textColor","Tab","Favorites","FavoritesList","favoritesUsersList","updateFavoritList","setUpdateFavoritList","updateList","removeFromFavorite","favoritesList","setUserformLS","isListLoad","setIsListLoad","tempFavoritesList","getUserformLS","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ae259b16.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = (event) => {\n    onChange && onChange(value,label,event.target.checked);\n  \n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst UserList = ({ users, isLoading }) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [favoritUsers, setFavoritUsers] = useState([]);\n  const [userList,setUsers] = useState([]);\n  const [selectedCountry,setCountry] = useState([]);\n  const [countryList,setCountryList] = useState([]);\n  let localFavoritUsers = [...favoritUsers];\n  let [favoritUsersFromLocalStorage,setFavoritFromLS] = useState([]);\n  let favoritUsersToLocalStorage =[];\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  \n  const addToFavorite = (user)=>{\n    if(!favoritUsers.includes(user)){\n    localFavoritUsers =[...favoritUsers,user];\n    }else{\n    localFavoritUsers = localFavoritUsers.filter(function(item){\n      return (item !== user);\n    })\n    }\n    setFavoritUsers(localFavoritUsers);\n    favoritUsersToLocalStorage = favoritUsersFromLocalStorage.concat(localFavoritUsers);\n    localStorage.setItem(\"favoritUsers\", JSON.stringify(favoritUsersToLocalStorage));\n  };\n  \n\n  const filterByCountery = (value,label,isChecked) => {\n    let newSelectedCountries = [...selectedCountry];\n    if(isChecked){ \n      newSelectedCountries = [...selectedCountry,label];\n    }else{\n      newSelectedCountries = newSelectedCountries.filter(function(item){\n        return (item !== label);\n      }) \n    }\n\n    const filterUsers = (newSelectedCountries.length === 0) ? users : users.filter(function(item){\n      return (newSelectedCountries.indexOf(item.location.country) !== -1 );\n    })\n    setCountry(newSelectedCountries);\n    setUsers(filterUsers) \n  };\n\n  const getPopulerCuntries = (users) => {\n    let countryMap = new Map();\n    users.forEach(element => {\n        if (countryMap.get(element.location.country)!=null){\n          countryMap.set(element.location.country,countryMap.get(element.location.country)+1);\n        }\n        else{\n            countryMap.set(element.location.country,1);\n        }    \n    });\n    let newCountries= [...countryMap.entries()].sort((a,b)=> b[1] - a[1]).slice(0,5);\n    console.log(countryMap);\n    console.log(newCountries);\n    setCountryList(newCountries);\n  }\n \n  useEffect(()=>{ \n    setUsers(users);\n    getPopulerCuntries(users)\n    if(JSON.parse(localStorage.getItem(\"favoritUsers\"))=== null){\n      setFavoritFromLS([]);\n    }else{\n    setFavoritFromLS(JSON.parse(localStorage.getItem(\"favoritUsers\")));\n    }\n  },[users])\n \n\n  return (\n    <S.UserList>\n      <S.Filters>\n        {/*\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={filterByCountery} />\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={filterByCountery} />\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={filterByCountery} />\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={filterByCountery}/>\n        */}\n        {countryList.map((country)=>{\n         return(\n           <CheckBox  label={country[0]} onChange={filterByCountery} />\n         )\n       })}\n      </S.Filters>\n      <S.List>\n        {userList.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favoritUsers.includes(user) }>\n                <IconButton  onClick={()=>addToFavorite(user)}>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Home = () => {\n  const { users, isLoading } = usePeopleFetch();\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList users={users} isLoading={isLoading} />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  async function fetchUsers() {\n    setIsLoading(true);\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n    setIsLoading(false);\n    setUsers(response.data.results);\n  }\n\n  return { users, isLoading, fetchUsers };\n};\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n  const history = useHistory();\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n    if(newValue === 1){\n      history.push(\"/Favorites\")\n    }else{\n      history.push(\"/\")\n    }\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} />\n        <Tab label=\"Favorites\" index={1} />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nexport const Favorites = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst FavoritesList = ({favoritesUsersList})=>{\n\n    const [updateFavoritList, setUpdateFavoritList] = useState([]);\n    \n    const removeFromFavorite = (user)=>{\n      let updateList = updateFavoritList.filter(function(item){\n        return (item !== user);\n      })\n      setUpdateFavoritList(updateList);\n      localStorage.setItem(\"favoritUsers\", JSON.stringify(updateList));\n    };\n    \n  \n    \n \n    useEffect(()=>{ \n      setUpdateFavoritList(favoritesUsersList);\n    },[favoritesUsersList])\n \n   \n  \n    return (\n      <S.UserList>\n        <S.List>\n          {updateFavoritList.map((user, index) => {\n            return (\n              <S.User\n                key={index}\n              >\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\n                <S.UserInfo>\n                  <Text size=\"22px\" bold>\n                    {user?.name.title} {user?.name.first} {user?.name.last}\n                  </Text>\n                  <Text size=\"14px\">{user?.email}</Text>\n                  <Text size=\"14px\">\n                    {user?.location.street.number} {user?.location.street.name}\n                  </Text>\n                  <Text size=\"14px\">\n                    {user?.location.city} {user?.location.country}\n                  </Text>\n                </S.UserInfo>\n                <S.IconButtonWrapper isVisible={true}>\n                  <IconButton  onClick={()=>removeFromFavorite(user)}>\n                    <FavoriteIcon color=\"error\" />\n                  </IconButton>\n                </S.IconButtonWrapper>\n              </S.User>\n            );\n          })}\n        </S.List>\n      </S.UserList>\n    );\n};\n\nexport default FavoritesList;","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport * as S from \"./style\";\nimport FavoritesList from \"components/FavoritesList\";\n\nconst Favorites = () =>{\n    const [favoritesList,setUserformLS] = useState([]);\n    const [isListLoad,setIsListLoad] = useState(false)\n\n    \n    useEffect(()=>{\n        getUserformLS();\n    },[isListLoad])\n\n    function getUserformLS() {\n      if(JSON.parse(localStorage.getItem(\"favoritUsers\"))=== null){\n        setUserformLS([]);\n      }else{\n        const tempFavoritesList = JSON.parse(localStorage.getItem(\"favoritUsers\"));\n        setUserformLS(tempFavoritesList);\n        setIsListLoad(true);\n      }\n    }\n  \n\n    return(\n     <S.Favorites>\n       <S.Content>\n          <S.Header>\n              <Text size=\"54px\" bold>\n                YOUR FAVORITES\n              </Text>    \n          </S.Header>\n          <FavoritesList favoritesUsersList={favoritesList} />\n        </S.Content>\n     </S.Favorites>\n    );\n};\n\nexport default Favorites;\n\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home} from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\nimport Favorites from \"pages/Favorites\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/Favorites\" component={Favorites} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}